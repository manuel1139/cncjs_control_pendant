#!/usr/bin/env node
 
var fs = require('fs');
var path = require('path');
var program = require('commander');
var serialport = require('serialport');
var pkg = require('../package.json');
var serverMain = require('../index');
var options = {};
var SPI = require('pi-spi');



program.parse(process.argv);

var options = {
    secret: program.secret,
    port: '/dev/ttyUSB0',
    baudrate: program.baudrate,
    socketAddress: program.socketAddress,
    socketPort: program.socketPort,
    controllerType: program.controllerType,
    accessTokenLifetime: program.accessTokenLifetime
};


var spi = SPI.initialize("/dev/spidev0.0");

var createServer = function(options) {
    serverMain(options, function(err, socket) {
        // Grbl
        socket.on('Grbl:state', function(state) {

	let rxpos = Number(state.status.mpos.x).toFixed(2);
	let rypos = Number(state.status.mpos.y).toFixed(2);
	let rzpos = Number(state.status.mpos.z).toFixed(2);

	let rmpos = "BB" + rxpos + ";" + rypos + ";" + rzpos + ";";
	rmpos = rmpos.replace(/\./g, '');

	let rmposBuf = Buffer.from(rmpos, "ascii");

	console.log(rmposBuf);
	spi.write(rmposBuf, function(e,d) {});
          console.log(rmpos);
        });
        // Sender
        socket.on('sender:status', function(status) {
//	    console.log(rmpos);
        });
        });


};


if (options.port) {
	
    createServer(options);
    console.log("7segment Display sarted");
    return;
}

